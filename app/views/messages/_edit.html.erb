<div class="message-edit-form">
	<div class="form-modal clearfix">
      <h2 class="message-edit-heading">
        メッセージ編集
      </h2>
      <button class="close-btn">
        <i class="fas fa-times"></i>
      </button>
      <div class="message-user-icon">
        <% if message.user.image? %>
          <%= image_tag message.user.image.url %>
        <% else %>
          <%= image_tag '1907765.jpg' %>
        <% end %>
        <p class="message-user-name">
          <%= message.user.name %>
        </p>
      </div>
      <%= form_with(model: message, class: 'edit-form', method: :put) do |f| %>
        <div class="input-area">
            <% f.hidden_field :room_id %>		  
            <div class="edit-flex-textarea">
              <div class="edit-textarea-dummy"></div>
              <%= f.text_area :content , class: 'textarea'%>
            </div>
    		<%= f.file_field :image , class: 'imgarea'%> 
    		<% if message.image? %>
    		  <%= image_tag message.image.url , class: 'img-preview-area' %>
    		<% end %>
        </div>
        <div class="img-input-area">
          <%= f.label :image, class: 'dummy-file-field' do%>
            <i class="fas fa-file-image"></i>
            <p>画像</p>
          <% end %>
          <div class="img-delete-group">
            <%= f.check_box :remove_image , class: 'img-delete-btn' %>
            <p class="img-delete">画像を削除する</p>
          </div>
        </div>
		<%= f.submit '編集' , class: 'submit-btn'%>
	  <% end %>
	</div>
</div>

<script type="text/javascript">
$(function(){
  $('.edit-textarea-dummy').text($('.textarea').val());
  $('.textarea').on('input',function(){
    $('.edit-textarea-dummy').text($(this).val());
  });

  const editedImg = $('.img-preview-area');
  const editedImgInput = $('.imgarea');
  const editDeleteBtn = $('.img-delete-btn');
  const editDeleteArea = $('.img-delete-group');
   
  //画像を設定してない状態から、画像を設定する時に削除ボタンを表示するための関数
  const setDlt = function(){
       if(editedImgInput.prop('files')[0] === undefined){
           editDeleteArea.hide();
       }else{
           editDeleteArea.show();
       }
   }

   //ファイルフィールドのファイルを読み込むためのファンクション
   const setSrc = function(file){
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = function(){
      const prevImg = reader.result;
      editedImg.attr('src',prevImg);
      setDlt();
    }
   };

   //ユーザー作成、編集でプレビューされていたプロフィール画像を削除する処理
   editDeleteBtn.on('change',function(){
       if($(this).is(':checked')){
           editedImg.fadeOut();
       }else{
           const file = editedImgInput.prop('files')[0];
           if(file !== undefined){
             setSrc(file);
           }else{
               return;
           }
       }
   });

   //プロフィール画像のプレビュー処理
   editedImgInput.on('change',function(e){
     const file = e.target.files[0];
     setSrc(file);
   });

   $('.close-btn').click(function(){
       $('.message-edit-form').fadeOut();
   });
});
</script>